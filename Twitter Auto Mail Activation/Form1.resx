<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAABkCAIAAACzY5qXAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAA7gSURBVHhe7Z17cFTVHcePHTuVh+1Mx2m1007t1DrO
        WHGsM/YxrdPRjjNaERkdIEHCKwghD+WRUFEYRRFFAQuoyGPwAdVCba3BBLKPZHfzIAbyIgiEZxKSmPBI
        SEJem0d/Z+/l7tm7u3fv3dzNTcP3M78/4N5zz56F89nfedy9ywYBAJYCCQGwGEgIgMVAQgAsBhICYDGQ
        EACLgYQAWAwkBMBiICEAFgMJAbAYSAiAxUBCACwGEgJgMZAQAIuBhABYDCQEwGIgIQAWAwkBsBhrJDzf
        0rWvvPmjg43e/gH5EADXK8Mj4cCZ5qv7qi6tOVA7fefxCW+UjllcxCbvH5deNAAHwXVPTCTs7+8/1tCx
        t/ziy1k1T+04dtfrpTc+X8Dm5LI4G4u3s9m5bKGbzXL8+s0y+QIArmPMkbCzp6+stv3jr7/N+OL0Y+9X
        3f5KCUv1sFlOrtwzdjbXyZLd7Pl8trjAH3Oc90BCAKKWsLWz9+CZKzuKGtP2nnp4U9VtK0p4cpvhYPE2
        NsPOEnNZioctEpQLDkgIgA+9Eja3dedVt2x2Ncz/9OQfN5TfsvwgW+CSrUtwsvkulhbJOlVAQgB8BEoo
        rJPUXe4+cPTSW87zCR+f+M3a0vHphWxeHptu59bNvGadyitDAQkB8BEgYX9/3yb3+SkfHL17Tel3FxeS
        J1y56Q4228mS3Oy5wEndEAMSAuAjQMIer5evoEzM5voFL6WYG5AQAB8qCft+/nIJH3aqhIlFQEIAfEBC
        ACwGEgJgMZAQAIuxUsIJ1yQ8VNu21d24q+TCrpJmX9AfpFD+GnxQPrKzuHlPcVObt0+qCoD/O0aEhHM/
        O8kezuSb/lHEDAebavtpemFVQ7tUmyHWZZ5WNywopm2u2FNQX3G2Vb4mKqgGiofWHg5ZecGxS3I5fZje
        7I4ur3YLTzd2yEWB2YyI4Wh65lkWl8MW5UcTVNXSAjb5AEvLv9LZK1WoHz29WQnqoEZtIQdW/POEqp5w
        QX1dviwS5jZbZ230RppauuVrgHmMiEyYkXmO3xWgKqAz+K08uWyK7aGNFS0dPVKF+jHUm6WgS+SLNaHc
        ol8/Je5cWazHc3Obrb82ah5SoumMiEy4LDoJlxTwTDjVNi7Zs83TIFVl9PuJUfRmiogeUk8NHtfpj+32
        GrmiMJjbbKk2EoxSseojgP6qei16X/T5Ip8GZjAiJIwmE/IE6GJTc57cdKTmcvRjJLGH7S9tko8K0ACM
        uibNi5RiGoUlyEDq0Kry1HeDuzhBB0k5VWGKcMJImNtsKqnxdggaVIvvSLttwChmSJjqYUkuttBFszL1
        KY0QhqPGMuGSQl8CzBmf7NnhaZRqiJqIvVmBziolKUgq+UQg1PtVBkackkkEq0huyOeCML3ZERHroTco
        HwVmEK2ENBSkmOXk39lN9oxLLxqztJB/uSnezi+nP6vKB0d0mTC9iCXmsSk5T2yqrL3cKV0+FPT3ZoJc
        UgpThFRLlXxoWiif0IEq4VCEm4CZ3mw9iG3DzNBEopKQhoLJbhZnu39N6bt55yvqOhpbe+tbekrOXXk1
        69yty4r4YyyoGFkqXqUKo3NC/wzQvdV1XrpQnAMea7p66oLhnmGoNxPJO48q5YNnbqq0Q5XLJ3SjGsrS
        y8knAjG32ToRK4naZBCMcQkpy813sQTHG1mh/y/bOnuf3nKUbOFfwtDw0JCE0rcZp+Q8+k7Zuctd0lUi
        79jrbkx05Rw33DOM9mYaIirlKenJR69Bgz2NszpRJa6QG33mNlsn4otCQhMxKCFJleJhzzg+K/lWviYM
        03Z8w6bZ+PxNVYMSOiXkM8ACqmpMsvu93BBzpLOXOidurGRPZtPYmJKhfFQ3RnszZSqlvGp+pUqDQ9lS
        E3NOyAGtic3Wj7jjguGoiRiUkNLgFFv6f0/JF2jySxpWzXSETYaChOlfng0tISXAZ3PZVEqAlWcvhUiA
        H+TVj13o4VmXhsdp+ZUNMR+OklpKeVVvFs2hauWjUUHZT6mKInhLwMRm60eZ7tKAGbsUJmJQwsTcHy8v
        Hhzsly8YHGzt9qZ8cmLCqkMPrjm8NT8gU2V9c5E/DiPcg2cECefvPcke2ccPKsbyGWABm2ofm+zekqvM
        AP3UtXRP2lTJ9Zvn4h8NqR4KCyWkTqkcpxh6oqDKldqCx37DL6GYS4f4EQNUGJGQxJias8ZWK5f2Tf/u
        eKmYPbGfL5NOd7CJWSuzzsrnfNyxupQ/ZVRVjxSChEcbO/78VhlN+dizLp79eALkM8DH36k8FyoBbnfV
        35zCdyn4Uo3kLQ2Sh0VCccImTq7CHY8acccieCnFrGbrR0mDFEMZaYNgjEiYmn9Dcn7NRf+8a/6nJ9mk
        /fzWTTpLk7ckF9n4Tb3/RuoXvjzHVRErUUKQUGJDTu33kjwszs5ngEmuLc46+YRA7eUuOQEm5nJXldqG
        S8JwbogrH1EvP4pQY5QKg6eFZjVbD5TkxZG2npcDhjAi4Zzce9aWy0UHBy+0d3+HRowLXP4CZOPTOYs+
        949Vsqou8iQZ8lk1goTKPsOp5s4/rDn029Ulp5tDLLFsczeMT3Hz9R56XdVUc1gkpO4o7h+Io0Sxl2ts
        sutHHP4F5y6zmq0NvRHxhQxdC/RjRMJ4W8LHx+Sig4OflzezBAdbHChYguN36/09prqpg99GQ4aIZaQQ
        7piJCCXAv26kBJjD2yYmQCWGRUJxeZC6tXzUh3jKlJ6qPYszq9kiKt9UQZ8yWIyJEUYkjLO9kOmf8r2e
        U8fvj1FlpHl5P1n5dW+fnNsutPeM/5vvMcFiGSmChqPh2OauH5/Kt+l9M8Awex4xlpD6n9iVKVTpThyw
        hdzZM4opEkZstkg4CSkP01URVQdRY0TC6fa3HP6FyowvzvDFT1WZBa6blx280C5/r6+1s/eWF4vDSahk
        wv9UNB0SZpIKviXQI1oJUImYSUgHxaGmFMHjw5Emoc5mi4STUAyj80mgB0MS2jY4/RKmh5QwyT0+o6i5
        Tf5eX0tn7w9fDJsJFQmf2nmMJpNb3Y2D/p8rHNjuqb851ROwBKoRZkioM0iJ4IGZKOEwD0d1Rshma0Of
        JpQDxbcm1YPVUXMxNCe0v3bAv2L5Wk5tiB32Z/Nufam42yu71NDafRNlsIVudTEKYTj6YlYNe/wrNsP+
        q1UlUz48FvfR8btWH2IznJEToBLDJSH1yJBdWaxHY8inH3Fhhl5UPnoNs5qtE2qMuEURhc9AA2MLMyl7
        /ffK/Kusmf8Ak2ovPsHxwNv+FdTyunZuYMhfrRAk5LetTff5nJjLsytFYl6IJVCNiL2Ed64s1pgXiWM/
        U8ZslE6VCqmR8tFrmNVs/ZB1oofBTQJRY0TCBMdf3j0iF+W/09RzQ5pqi6KQPb3/+c/9ou7+upl/10kp
        IIYgYUZmmNvW9EfMJKRPfcpsEUeY1NGVS7SnXjoRrQ5OrWY12xDiCJkCydAsjEiY5B6XXnS12/8wpXn/
        qGaTsuXNejKQLpzjrG5qk08PDs7afZJv64mVKDHyJBxKxhBHjxRDnzWRRUptVLl89BpmNdsopk99AWFE
        Qop42+4S/5fZ27u9t/Pb1rL5j6VNy2GTs9fn+Vduer3e72cU8e89qSqRYnRJSIjaDHFaKN7AHXJnzyoJ
        tfMziA4jEtIMbabj7jdK5dI+Wrq8abur7199+NH15XtLA77ftC6vlt8OGm5nb9RJSJ1SqYrMGUoyFBNO
        yBmmVRKK7xESmoXBTEgx1bbZHflf/3Jnz03JHn5DdrjFlYBHHo4GCVVTphVGHmwhQs0Q6wkpMzLhaMKg
        hJTWFrjJn7zqy/I1oegbGLjv1UMs3sGWFqlrUGLUZUJCrI0iimVS1dySKpRPBGKVhJgTxgLjmTC9kM3N
        ozLb/A96CaCiru2+VSUsjgzU3OIbjRJ2dHnFmSGFIQ9V3+WlMW24FUhLJBRTfciZKogO4xJSkIfzXSze
        +eC6iu0FjRXn279t6zl54Wpm5cXET6r5D2vPIAODrlLFaJSQUKUyimmbKyLeyEayiS2RQiPVmNhs/cNm
        cZ8QY1ETiUpCCprpLeLrNHy/PsUzdlkh/1rTbCe/pZumgto5UIpRKiFB9Sh1KkE9mDquarOBcgsdVN1j
        LYV2Y0xsNtVA2Vt7bEntFA2k8tgkNJFoJZRCWnSRHv4r/cZ9uGWY4DBXwrR8tsB1uNa/RamTWEhIUJ9W
        qo0iIk63zJVQClIr+GOCKhdfi4IGosH7lmAoDE3CoYSJEi7x3SeQ5GpoNfw44BhJSFBPFbOHzqBL9HTx
        WEioJ3Q2DxhiREg4b88p9kgmH81GEXN8t5s+kb0qO5o7NmMnoQTVqVqqCRdUTH8DTGw2XU7JTalNIzAP
        jBEjQsINrvP3Lj94/7ryKOLetWW/f7Nsk1teqvU/kVsfsZZQgrIH9WDxtZTYbq8JHgRGxPRm0wCYmiHu
        QEghjVFj9y8DiBEhoXF3ABg9jBAJAbh+gYQAWAwkBMBiICEAFgMJAbAYSAiAxQRI2NXr5Xd+Tsrmv8eS
        6lE/xMncgIQA+AiQsK+/f+VXNQ+9XXHbimL+lLQEB78he4bv2WcpZjsJCQHwESChQmePt6ymfVdJc8YX
        Zx97v+oXr5TwxxbOcvIfo59uZ3Nz5du1VT9EYSggIQA+Qkuoon9goKqhY09p84p9ZyZvPXrn6sPfeS6f
        //BgnJ2nytlOttDFngv1cFGNgIQA+NAlYTCnL3Ttq7q4Jqcu/sPjE94sHbOkiA9ZSUgKSphJ15zU+GYT
        JATAR5QSqmho6XGeaP17bv3cXSceWFf5g4wivrRDA1cavs508q/hp+arp5SQEAAf5kiooqmtO/9UyxZP
        /cLPTv5pY+WPlhezhR6+wBNv40++kJZeZxv4fUIARjExkVDFlc6+wzVtHxU3Lv33mUfeq/rZyhKW4mYT
        vxqbXiSXAOA6ZjgkVNHd23ekvmNbfsN6Z73X/1toAFynWCChCBQEwGIJAQCQEACLgYQAWAwkBMBiICEA
        FgMJAbAYSAiAxUBCACwGEgJgMZAQAIuBhABYDCQEwGIgIQAWAwkBsBhICIDFQEIALAYSAmApg4P/A8Dx
        dpLEr0sDAAAAAElFTkSuQmCC
</value>
  </data>
</root>